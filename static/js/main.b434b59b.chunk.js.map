{"version":3,"sources":["App.js","Form.js","reportWebVitals.js","index.js"],"names":["App","props","state","startDate","endDate","className","this","startDateId","endDateId","onDatesChange","setState","focusedInput","onFocusChange","withPortal","Component","Form","useForm","register","handleSubmit","errors","formState","intialValues","onSubmit","data","alert","JSON","stringify","htmlFor","defaultValue","placeholder","validate","value","length","lastName","type","positiveNumber","parseFloat","lessThanHundred","age","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4WAqCeA,E,kDA5Bb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,UAAW,KACXC,QAAS,MAJK,E,0CAQlB,WAAS,IAAD,OACN,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,kBAAD,CACEF,UAAWG,KAAKJ,MAAMC,UACtBI,YAAY,4BACZH,QAASE,KAAKJ,MAAME,QACpBI,UAAU,0BACVC,cAAe,gBAAGN,EAAH,EAAGA,UAAWC,EAAd,EAAcA,QAAd,OAA4B,EAAKM,SAAS,CAAEP,YAAWC,aACtEO,aAAcL,KAAKJ,MAAMS,aACzBC,cAAe,SAAAD,GAAY,OAAI,EAAKD,SAAS,CAAEC,kBAC/CE,YAAY,U,GApBJC,a,wBCuDHC,MA3Df,WACE,MAIIC,cAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAKTE,EAEM,GAFNA,EAGG,GAHHA,EAIC,GAGP,OACE,uBAAMC,SAAUJ,GAXD,SAACK,GAChBC,MAAMC,KAAKC,UAAUH,OAUrB,UACE,uBAAOI,QAAQ,WAAf,0BACA,mCACEC,aAAcP,EACdQ,YAAY,IACRZ,EAAS,WAAY,CACvBa,SAAU,SAACC,GAAD,OAAWA,EAAMC,OAAS,OAGvCb,EAAOc,UAAY,kIAEpB,uBAAON,QAAQ,QAAf,mBACA,mCACEC,aAAcP,EACdQ,YAAY,GACZK,KAAK,SACDjB,EAAS,WAEf,uBAAOU,QAAQ,MAAf,0BACA,mCACEC,aAAcP,EACdQ,YAAY,GACZK,KAAK,QACDjB,EAAS,MAAO,CAClBa,SAAU,CACRK,eAAgB,SAACJ,GAAD,OAAWK,WAAWL,GAAS,GAC/CM,gBAAiB,SAACN,GAAD,OAAWK,WAAWL,GAAS,UAIrDZ,EAAOmB,KAA2B,mBAApBnB,EAAOmB,IAAIJ,MACxB,2HAEDf,EAAOmB,KAA2B,oBAApBnB,EAAOmB,IAAIJ,MACxB,oEAGF,uBAAOA,KAAK,eC9CHK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAU1Bb,M","file":"static/js/main.b434b59b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport './react-dates-custom.css'; \r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      startDate: null,\r\n      endDate: null,\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <DateRangePicker\r\n          startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n          startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\r\n          endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n          endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\r\n          onDatesChange={({ startDate, endDate }) => this.setState({ startDate, endDate })} // PropTypes.func.isRequired,\r\n          focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n          onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\r\n          withPortal={true} // ★\r\n          \r\n        />\r\n    </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./styles.css\";\r\n\r\nfunction Form() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm();\r\n  const onSubmit = (data) => {\r\n    alert(JSON.stringify(data));\r\n  };\r\n  const intialValues = {\r\n    firstName: \"bill\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    age: \"\"\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <label htmlFor=\"lastName\">名前</label>\r\n      <input\r\n        defaultValue={intialValues.lastName}\r\n        placeholder=\"\"\r\n        {...register(\"lastName\", {\r\n          validate: (value) => value.length > 3\r\n        })}\r\n      />\r\n      {errors.lastName && <p>名前は3文字以上、入力してください</p>}\r\n\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input\r\n        defaultValue={intialValues.email}\r\n        placeholder=\"\"\r\n        type=\"email\"\r\n        {...register(\"email\")}\r\n      />\r\n      <label htmlFor=\"age\">年齢</label>\r\n      <input\r\n        defaultValue={intialValues.age}\r\n        placeholder=\"\"\r\n        type=\"text\"\r\n        {...register(\"age\", {\r\n          validate: {\r\n            positiveNumber: (value) => parseFloat(value) > 0,\r\n            lessThanHundred: (value) => parseFloat(value) < 200\r\n          }\r\n        })}\r\n      />\r\n      {errors.age && errors.age.type === \"positiveNumber\" && (\r\n        <p>年齢が正しく入力されていません</p>\r\n      )}\r\n      {errors.age && errors.age.type === \"lessThanHundred\" && (\r\n        <p>Your age should be greater than 200</p>\r\n      )}\r\n\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Form from './Form';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Form />\r\n  </React.StrictMode>,\r\n  document.getElementById('form')\r\n);\r\n\r\n\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}